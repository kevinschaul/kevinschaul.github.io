<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Schaul</title>
    <link>https://www.kschaul.com/</link>
    <description>Recent content on Kevin Schaul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.kschaul.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing D3 in React with an escape hatch</title>
      <link>https://www.kschaul.com/til/2022/12/19/writing-d3-in-react-with-an-escape-hatch/</link>
      <pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.kschaul.com/til/2022/12/19/writing-d3-in-react-with-an-escape-hatch/</guid>
      <description>Most of The Washington Post has moved to React for site rendering. This is hugely beneficial overall but for many graphics reporters it’s yet another thing to learn to get stories published.
It’s already overwhelming to learn HTML/CSS/JS, data analysis, some way to build charts, some mapping tool. I’m interested in lowering the barriers to entry for this field.
Fortunately there’s a fairly simple pattern we can build into our tooling to bring back some simplicity of the pre-React frontend development.</description>
    </item>
    
    <item>
      <title>AI can now create images out of thin air. See how it works.</title>
      <link>https://www.washingtonpost.com/technology/interactive/2022/ai-image-generator/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.washingtonpost.com/technology/interactive/2022/ai-image-generator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The housing market is cooling. What’s it like in your area?</title>
      <link>https://www.washingtonpost.com/business/interactive/2022/cooling-housing-market/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.washingtonpost.com/business/interactive/2022/cooling-housing-market/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Coloring emoji/unicode characters on iOS Safari</title>
      <link>https://www.kschaul.com/til/2022/09/13/coloring-emoji-unicode-characters-on-ios-safari/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.kschaul.com/til/2022/09/13/coloring-emoji-unicode-characters-on-ios-safari/</guid>
      <description>Unicode characters such as ■ (black square U+25A0) can be super useful to use for icons without needing to load an icon font. And they can typically be styled using CSS, like: color: steelblue;.
But on iOS safari (and likely Android and other devices), these are rendered in the cartooney, emoji style — which means trying to color them with CSS doesn’t work.
Fortunately there is an easy (but cryptic) fix: Simply append &amp;amp;#xFE0E; immediately following your unicode character, like ■&amp;amp;#xFE0E;.</description>
    </item>
    
    <item>
      <title>Caching R code with cache_rds()</title>
      <link>https://www.kschaul.com/til/2022/08/18/caching-r-code-with-cache-rds/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.kschaul.com/til/2022/08/18/caching-r-code-with-cache-rds/</guid>
      <description>If you&amp;rsquo;ve got R code that takes a while to run (a query? complex analysis?), check out the fantastic cache_rds() function from Yihui Xie’s xfun package.
Let&amp;rsquo;s say you want to get census data from tidycensus, but you don’t want to keep hitting the API. Instead of writing:
cbsa_pop &amp;lt;- get_decennial(geography=&amp;#39;cbsa&amp;#39;, variables=&amp;#39;P1_001N&amp;#39;, year=2020) You write:
cbsa_pop &amp;lt;- cache_rds({ get_decennial(geography=&amp;#39;cbsa&amp;#39;, variables=&amp;#39;P1_001N&amp;#39;, year=2020) }) The first time you run it, it will hit the census API like usual.</description>
    </item>
    
    <item>
      <title>Create a new TIL</title>
      <link>https://www.kschaul.com/til/2022/08/15/create-a-new-til/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.kschaul.com/til/2022/08/15/create-a-new-til/</guid>
      <description>To create a new TIL post using blogdown/Hugo:
library(blogdown) blogdown::new_post(&amp;#39;your-new-til-slug-here&amp;#39;, kind=&amp;#39;til&amp;#39;, subdir=&amp;#39;til&amp;#39;) </description>
    </item>
    
    <item>
      <title>Investors bought a record share of homes in 2021. See where.</title>
      <link>https://www.washingtonpost.com/business/interactive/2022/housing-market-investors/</link>
      <pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.washingtonpost.com/business/interactive/2022/housing-market-investors/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A tool to create printable, scannable cards for albums on Spotify</title>
      <link>https://github.com/kevinschaul/spotify-album-cards</link>
      <pubDate>Wed, 03 Nov 2021 10:00:00 +0000</pubDate>
      
      <guid>https://github.com/kevinschaul/spotify-album-cards</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pandora Papers: Billions beyond reach</title>
      <link>https://www.washingtonpost.com/business/interactive/2021/pandora-papers-offshore-finance/</link>
      <pubDate>Sun, 03 Oct 2021 10:00:00 +0000</pubDate>
      
      <guid>https://www.washingtonpost.com/business/interactive/2021/pandora-papers-offshore-finance/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DeJoy’s USPS slowdown plan will delay the mail. What’s it mean for your Zip code?</title>
      <link>https://www.washingtonpost.com/business/interactive/2021/dejoy-usps-delays-by-zip-code-map/</link>
      <pubDate>Thu, 24 Jun 2021 10:00:00 +0000</pubDate>
      
      <guid>https://www.washingtonpost.com/business/interactive/2021/dejoy-usps-delays-by-zip-code-map/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
