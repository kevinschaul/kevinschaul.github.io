<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Kevin Schaul</title>
    <link>http://www.kschaul.com/tags/r/</link>
    <description>Recent content in R on Kevin Schaul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Apr 2024 00:00:00 -0500</lastBuildDate><atom:link href="http://www.kschaul.com/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fix FIPS codes in R with str_pad()</title>
      <link>http://www.kschaul.com/til/2024/04/20/fix-fips-codes-in-r-with-str-pad/</link>
      <pubDate>Sat, 20 Apr 2024 00:00:00 -0500</pubDate>
      
      <guid>http://www.kschaul.com/til/2024/04/20/fix-fips-codes-in-r-with-str-pad/</guid>
      <description>FIPS codes for U.S. counties need leading zeros, but often your data doesn&amp;rsquo;t have them. Someone down the line may have read them in as numbers, which removed the leading zeroes.
stringr makes fixing that a breeze:
data %&amp;gt;% mutate( fips = str_pad(fips, 5, pad=&amp;#34;0&amp;#34;) ) h/t Luis Melgar</description>
    </item>
    
    <item>
      <title>Write nested JSON with keys in R/tidyverse</title>
      <link>http://www.kschaul.com/til/2023/03/22/write-nested-json-with-keys-in-r-tidyverse/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 -0500</pubDate>
      
      <guid>http://www.kschaul.com/til/2023/03/22/write-nested-json-with-keys-in-r-tidyverse/</guid>
      <description>I always struggle to write JSON in R in exactly the format I need. I figured out a trick today to take a dataframe, nest it by a column and write it to a JSON with that column&amp;rsquo;s values as keys.
To nest a table like this:
## # A tibble: 2 × 3 ## col_to_nest another_col a_third_col ## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 col_value_a 1213691 14616745740 ## 2 col_value_b 1167231 13592103952 Try this:</description>
    </item>
    
    <item>
      <title>Speed up tidyverse analysis with dtplyr</title>
      <link>http://www.kschaul.com/til/2023/03/21/speed-up-tidyverse-analysis-with-dtplyr/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 -0500</pubDate>
      
      <guid>http://www.kschaul.com/til/2023/03/21/speed-up-tidyverse-analysis-with-dtplyr/</guid>
      <description>I&amp;rsquo;ve got a ~15 million rows dataset that I need to do cleaning on. I&amp;rsquo;m a big tidyverse fan, but dplyr is slower than data.table.
Well, TIL about dtplyr, which lets you write dplyr code but gain the speed of data.table:
library(data.table) library(dtplyr) library(dplyr, warn.conflicts=FALSE) data_lazy &amp;lt;- data %&amp;gt;% lazy_dt(immutable=FALSE) data_lazy %&amp;gt;% mutate(...) %&amp;gt;% group_by(column) %&amp;gt;% summarize(...) %&amp;gt;% as_tibble() Take a look at the immutable argument in the docs. This runs soooo much faster.</description>
    </item>
    
    <item>
      <title>Caching R code with cache_rds()</title>
      <link>http://www.kschaul.com/til/2022/08/18/caching-r-code-with-cache-rds/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 -0500</pubDate>
      
      <guid>http://www.kschaul.com/til/2022/08/18/caching-r-code-with-cache-rds/</guid>
      <description>If you&amp;rsquo;ve got R code that takes a while to run (a query? complex analysis?), check out the fantastic cache_rds() function from Yihui Xie’s xfun package.
Let&amp;rsquo;s say you want to get census data from tidycensus, but you don’t want to keep hitting the API. Instead of writing:
cbsa_pop &amp;lt;- get_decennial(geography=&amp;#39;cbsa&amp;#39;, variables=&amp;#39;P1_001N&amp;#39;, year=2020) You write:
cbsa_pop &amp;lt;- cache_rds({ get_decennial(geography=&amp;#39;cbsa&amp;#39;, variables=&amp;#39;P1_001N&amp;#39;, year=2020) }) The first time you run it, it will hit the census API like usual.</description>
    </item>
    
    <item>
      <title>Create a new TIL</title>
      <link>http://www.kschaul.com/til/2022/08/15/create-a-new-til/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 -0500</pubDate>
      
      <guid>http://www.kschaul.com/til/2022/08/15/create-a-new-til/</guid>
      <description>To create a new TIL post using blogdown/Hugo:
library(blogdown) blogdown::new_post(&amp;#39;your-new-til-slug-here&amp;#39;, kind=&amp;#39;til&amp;#39;, subdir=&amp;#39;til&amp;#39;) </description>
    </item>
    
  </channel>
</rss>
